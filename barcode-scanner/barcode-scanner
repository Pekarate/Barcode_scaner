#!/usr/bin/python3

import requests
import os
import json
import evdev
from evdev import InputDevice, categorize, ecodes

json_file = "/etc/cfg.json"

with open(json_file) as file:
    data_cfg = json.load(file)

work_dir = '/data'
media = f'{work_dir}/media'
os.makedirs(media, exist_ok=True)
usb_backingfile = os.path.join(work_dir, 'usb_partition.img')

barcode_buff = ''
host_name = data_cfg['host']
port = data_cfg['port']
desktop_url = f'http://{host_name}:{port}/'


def move_to_usb(fpath):
    url = 'http://127.0.0.1:8080/addfile'
    data = {
        'fpath': fpath
    }
    response = requests.post(url, json=data)


def request_barcode(barcode):
    print("Barcode: ", barcode)
    url = desktop_url + 'barcode'

    data = {
        'barcode': barcode
    }
    response = requests.post(url, json=data)
    if response.status_code == 200:
        try:
            attachment_filename = response.headers.get('Content-Disposition').split('filename=')[1]
            save_path = f'{media}/{attachment_filename}'
            with open(save_path, 'wb') as file:
                file.write(response.content)
            print(f"Received file: {attachment_filename}")
            move_to_usb(save_path)
            print("File content saved successfully.")
        except:
            print("Request error")
            pass
    else:
        print("Error occurred while sending the request.")


def find_device():
    while True:
        devices = [InputDevice(path) for path in evdev.list_devices()]
        barcode_device = None
        keyboard_devie = None
        for device in devices:
            if device is None:
                continue
            if "barcode" in device.name.lower():
                barcode_device = device

            if "keyboard" in device.name.lower():
                keyboard_devie = device
            
        if barcode_device is not None:
            return barcode_device

        if keyboard_devie is not None:
            return keyboard_devie


def barcode_scanner(barcode_device):
    barcode_device.grab()
    barcode = ""
    for event in barcode_device.read_loop():
        if event.type == ecodes.EV_KEY:
            data = categorize(event)
            if data.keystate == 1 and data.scancode != ecodes.KEY_RESERVED:
                if data.scancode == ecodes.KEY_ENTER:
                    request_barcode(barcode)
                    barcode = ""
                else:
                    barcode += data.keycode[4:]
    print("End")


def key_event(event):
    global barcode_buff
    if event.event_type == 'down':
        if event.name == 'enter':
            request_barcode(barcode_buff)
            barcode_buff = ''
        else:
            barcode_buff += event.name

print('Barcode Scanner: start')

device = find_device()
print(device.name)
while True:
    try:
        barcode_scanner(device)
        device.ungrab()
    except:
        try:
            device.ungrab()
        except:
            pass
        print('Barcode Scanner: Refind device')
        device = find_device()


